{"ast":null,"code":"import _slicedToArray from \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\gobarber\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\gobarber\\\\frontend\\\\src\\\\pages\\\\Profile\\\\AvatarInput\\\\index.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useField } from '@rocketseat/unform';\nimport api from \"../../../services/api\";\nimport { Container } from './styles';\nexport default function AvatarInput() {\n  const _useField = useField('avatar'),\n        defaultValue = _useField.defaultValue,\n        registerField = _useField.registerField;\n\n  const _useState = useState(defaultValue && defaultValue.id),\n        _useState2 = _slicedToArray(_useState, 2),\n        file = _useState2[0],\n        setFile = _useState2[1];\n\n  const _useState3 = useState(defaultValue && defaultValue.url),\n        _useState4 = _slicedToArray(_useState3, 2),\n        preview = _useState4[0],\n        setPreview = _useState4[1];\n\n  const ref = useRef();\n\n  async function handleChange(e) {\n    const data = new FormData();\n    data.append('file', e.target.files[0]);\n    const response = await api.post('files', data);\n    const _response$data = response.data,\n          id = _response$data.id,\n          url = _response$data.url;\n    setFile(id);\n    setPreview(url);\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"file\",\n    id: \"avatar\",\n    accept: \"image/*\",\n    \"data-file\": file,\n    onChange: handleChange,\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:\\Temp\\Rocketseat\\Bootcamp\\gobarber\\frontend\\src\\pages\\Profile\\AvatarInput\\index.js"],"names":["React","useState","useRef","useEffect","useField","api","Container","AvatarInput","defaultValue","registerField","id","file","setFile","url","preview","setPreview","ref","handleChange","e","data","FormData","append","target","files","response","post"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SAASC,SAAT,QAA0B,UAA1B;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA,oBACMH,QAAQ,CAAC,QAAD,CADd;AAAA,QAC1BI,YAD0B,aAC1BA,YAD0B;AAAA,QACZC,aADY,aACZA,aADY;;AAAA,oBAGVR,QAAQ,CAACO,YAAY,IAAIA,YAAY,CAACE,EAA9B,CAHE;AAAA;AAAA,QAG3BC,IAH2B;AAAA,QAGrBC,OAHqB;;AAAA,qBAIJX,QAAQ,CAACO,YAAY,IAAIA,YAAY,CAACK,GAA9B,CAJJ;AAAA;AAAA,QAI3BC,OAJ2B;AAAA,QAIlBC,UAJkB;;AAMlC,QAAMC,GAAG,GAAGd,MAAM,EAAlB;;AAEA,iBAAee,YAAf,CAA4BC,CAA5B,EAA+B;AAC3B,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AAEAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB;AAEA,UAAMC,QAAQ,GAAG,MAAMnB,GAAG,CAACoB,IAAJ,CAAS,OAAT,EAAkBN,IAAlB,CAAvB;AAL2B,2BAOPK,QAAQ,CAACL,IAPF;AAAA,UAOnBT,EAPmB,kBAOnBA,EAPmB;AAAA,UAOfG,GAPe,kBAOfA,GAPe;AAS3BD,IAAAA,OAAO,CAACF,EAAD,CAAP;AACAK,IAAAA,UAAU,CAACF,GAAD,CAAV;AACH;;AAED,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,EAAT;AAAY,IAAA,GAAG,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,EAAE,EAAC,QAFP;AAGI,IAAA,MAAM,EAAC,SAHX;AAII,iBAAWF,IAJf;AAKI,IAAA,QAAQ,EAAEM,YALd;AAMI,IAAA,GAAG,EAAED,GANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADJ;AAgBH","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useField } from '@rocketseat/unform';\n\nimport api from '~/services/api';\n\nimport { Container } from './styles';\n\nexport default function AvatarInput() {\n    const { defaultValue, registerField } = useField('avatar');\n\n    const [file, setFile] = useState(defaultValue && defaultValue.id);\n    const [preview, setPreview] = useState(defaultValue && defaultValue.url);\n\n    const ref = useRef();\n\n    async function handleChange(e) {\n        const data = new FormData();\n\n        data.append('file', e.target.files[0]);\n\n        const response = await api.post('files', data);\n\n        const { id, url } = response.data;\n\n        setFile(id);\n        setPreview(url);\n    }\n\n    return (\n        <Container>\n            <label htmlFor=\"avatar\">\n                <img src=\"\" alt=\"\" />\n\n                <input\n                    type=\"file\"\n                    id=\"avatar\"\n                    accept=\"image/*\"\n                    data-file={file}\n                    onChange={handleChange}\n                    ref={ref}\n                />\n            </label>\n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}