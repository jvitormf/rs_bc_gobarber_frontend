{"ast":null,"code":"import _slicedToArray from \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\gobarber\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\gobarber\\\\frontend\\\\src\\\\components\\\\Notifications\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { MdNotifications } from 'react-icons/md';\nimport { parseISO, formatDistance } from 'date-fns';\nimport pt from 'date-fns/locale/pt';\nimport api from \"../../services/api\";\nimport { Container, Badge, NotificationList, Scroll, Notification } from './styles';\nexport default function Notifications() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        visible = _useState2[0],\n        setVisible = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        notifications = _useState4[0],\n        setNotifications = _useState4[1];\n\n  useEffect(() => {\n    async function loadNotifications() {\n      const response = await api.get('notifications');\n      setNotifications(response.data);\n    }\n  }, []);\n\n  function handleToggleVisible() {\n    setVisible(!visible);\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    onClick: handleToggleVisible,\n    hasUnread: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(MdNotifications, {\n    color: \"#7159c1\",\n    size: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(NotificationList, {\n    visible: visible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Scroll, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Notification, {\n    unread: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"vc possui um novo agendamento\"), React.createElement(\"time\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"ha 2 dias\"), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"marcar como lida\")), React.createElement(Notification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"vc possui um novo agendamento\"), React.createElement(\"time\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"ha 2 dias\"), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"marcar como lida\")), React.createElement(Notification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"vc possui um novo agendamento\"), React.createElement(\"time\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"ha 2 dias\"), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"marcar como lida\")), React.createElement(Notification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"vc possui um novo agendamento\"), React.createElement(\"time\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"ha 2 dias\"), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"marcar como lida\")), React.createElement(Notification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"vc possui um novo agendamento\"), React.createElement(\"time\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"ha 2 dias\"), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"marcar como lida\")), React.createElement(Notification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"vc possui um novo agendamento\"), React.createElement(\"time\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"ha 2 dias\"), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"marcar como lida\")), React.createElement(Notification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"vc possui um novo agendamento\"), React.createElement(\"time\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"ha 2 dias\"), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"marcar como lida\")))));\n}","map":{"version":3,"sources":["C:\\Temp\\Rocketseat\\Bootcamp\\gobarber\\frontend\\src\\components\\Notifications\\index.js"],"names":["React","useState","useEffect","MdNotifications","parseISO","formatDistance","pt","api","Container","Badge","NotificationList","Scroll","Notification","Notifications","visible","setVisible","notifications","setNotifications","loadNotifications","response","get","data","handleToggleVisible"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MdNotifications } from 'react-icons/md';\nimport { parseISO, formatDistance } from 'date-fns';\nimport pt from 'date-fns/locale/pt';\n\nimport api from '~/services/api';\n\nimport {\n    Container,\n    Badge,\n    NotificationList,\n    Scroll,\n    Notification,\n} from './styles';\n\nexport default function Notifications() {\n    const [visible, setVisible] = useState(false);\n    const [notifications, setNotifications] = useState([]);\n\n    useEffect(() => {\n        async function loadNotifications() {\n            const response = await api.get('notifications');\n\n            setNotifications(response.data);\n        }\n    }, []);\n\n    function handleToggleVisible() {\n        setVisible(!visible);\n    }\n\n    return (\n        <Container>\n            <Badge onClick={handleToggleVisible} hasUnread>\n                <MdNotifications color=\"#7159c1\" size={20} />\n            </Badge>\n\n            <NotificationList visible={visible}>\n                <Scroll>\n                    <Notification unread>\n                        <p>vc possui um novo agendamento</p>\n                        <time>ha 2 dias</time>\n                        <button type=\"button\">marcar como lida</button>\n                    </Notification>\n                    <Notification>\n                        <p>vc possui um novo agendamento</p>\n                        <time>ha 2 dias</time>\n                        <button type=\"button\">marcar como lida</button>\n                    </Notification>\n                    <Notification>\n                        <p>vc possui um novo agendamento</p>\n                        <time>ha 2 dias</time>\n                        <button type=\"button\">marcar como lida</button>\n                    </Notification>\n                    <Notification>\n                        <p>vc possui um novo agendamento</p>\n                        <time>ha 2 dias</time>\n                        <button type=\"button\">marcar como lida</button>\n                    </Notification>\n                    <Notification>\n                        <p>vc possui um novo agendamento</p>\n                        <time>ha 2 dias</time>\n                        <button type=\"button\">marcar como lida</button>\n                    </Notification>\n                    <Notification>\n                        <p>vc possui um novo agendamento</p>\n                        <time>ha 2 dias</time>\n                        <button type=\"button\">marcar como lida</button>\n                    </Notification>\n                    <Notification>\n                        <p>vc possui um novo agendamento</p>\n                        <time>ha 2 dias</time>\n                        <button type=\"button\">marcar como lida</button>\n                    </Notification>\n                </Scroll>\n            </NotificationList>\n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}