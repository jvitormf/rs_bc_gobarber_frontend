{"ast":null,"code":"import _defineProperty from \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\gobarber\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\gobarber\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\gobarber\\\\frontend\\\\src\\\\components\\\\Notifications\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { MdNotifications } from 'react-icons/md';\nimport { parseISO, formatDistance } from 'date-fns';\nimport pt from 'date-fns/locale/pt';\nimport api from \"../../services/api\";\nimport { Container, Badge, NotificationList, Scroll, Notification } from './styles';\nexport default function Notifications() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        visible = _useState2[0],\n        setVisible = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        notifications = _useState4[0],\n        setNotifications = _useState4[1];\n\n  useEffect(() => {\n    async function loadNotifications() {\n      const response = await api.get('notifications');\n      const data = response.data.map(notification => _objectSpread({}, notification, {\n        timeDistance: formatDistance(parseISO(notification.createdAt), new Date(), {\n          addSuffix: true,\n          locale: pt\n        })\n      }));\n      setNotifications(data);\n    }\n\n    loadNotifications();\n  }, []);\n\n  function handleToggleVisible() {\n    setVisible(!visible);\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    onClick: handleToggleVisible,\n    hasUnread: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(MdNotifications, {\n    color: \"#7159c1\",\n    size: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(NotificationList, {\n    visible: visible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Scroll, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, notifications.map(notification => React.createElement(Notification, {\n    unread: !Notification.read,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Voc\\xEA possui um novo agendamento\"), React.createElement(\"time\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"h\\xE1 2 dias\"), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Marcar como lida\"))))));\n}","map":{"version":3,"sources":["C:\\Temp\\Rocketseat\\Bootcamp\\gobarber\\frontend\\src\\components\\Notifications\\index.js"],"names":["React","useState","useEffect","MdNotifications","parseISO","formatDistance","pt","api","Container","Badge","NotificationList","Scroll","Notification","Notifications","visible","setVisible","notifications","setNotifications","loadNotifications","response","get","data","map","notification","timeDistance","createdAt","Date","addSuffix","locale","handleToggleVisible","read"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,UAAzC;AACA,OAAOC,EAAP,MAAe,oBAAf;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,SACIC,SADJ,EAEIC,KAFJ,EAGIC,gBAHJ,EAIIC,MAJJ,EAKIC,YALJ,QAMO,UANP;AAQA,eAAe,SAASC,aAAT,GAAyB;AAAA,oBACNZ,QAAQ,CAAC,KAAD,CADF;AAAA;AAAA,QAC7Ba,OAD6B;AAAA,QACpBC,UADoB;;AAAA,qBAEMd,QAAQ,CAAC,EAAD,CAFd;AAAA;AAAA,QAE7Be,aAF6B;AAAA,QAEdC,gBAFc;;AAIpCf,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAegB,iBAAf,GAAmC;AAC/B,YAAMC,QAAQ,GAAG,MAAMZ,GAAG,CAACa,GAAJ,CAAQ,eAAR,CAAvB;AAEA,YAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,YAAY,sBACpCA,YADoC;AAEvCC,QAAAA,YAAY,EAAEnB,cAAc,CACxBD,QAAQ,CAACmB,YAAY,CAACE,SAAd,CADgB,EAExB,IAAIC,IAAJ,EAFwB,EAGxB;AAAEC,UAAAA,SAAS,EAAE,IAAb;AAAmBC,UAAAA,MAAM,EAAEtB;AAA3B,SAHwB;AAFW,QAA9B,CAAb;AASAW,MAAAA,gBAAgB,CAACI,IAAD,CAAhB;AACH;;AAEDH,IAAAA,iBAAiB;AACpB,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,WAASW,mBAAT,GAA+B;AAC3Bd,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH;;AAED,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEe,mBAAhB;AAAqC,IAAA,SAAS,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,SAAvB;AAAiC,IAAA,IAAI,EAAE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAKI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEf,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,aAAa,CAACM,GAAd,CAAkBC,YAAY,IAC3B,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAE,CAACX,YAAY,CAACkB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,CADH,CADL,CADJ,CALJ,CADJ;AAmBH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MdNotifications } from 'react-icons/md';\nimport { parseISO, formatDistance } from 'date-fns';\nimport pt from 'date-fns/locale/pt';\n\nimport api from '~/services/api';\n\nimport {\n    Container,\n    Badge,\n    NotificationList,\n    Scroll,\n    Notification,\n} from './styles';\n\nexport default function Notifications() {\n    const [visible, setVisible] = useState(false);\n    const [notifications, setNotifications] = useState([]);\n\n    useEffect(() => {\n        async function loadNotifications() {\n            const response = await api.get('notifications');\n\n            const data = response.data.map(notification => ({\n                ...notification,\n                timeDistance: formatDistance(\n                    parseISO(notification.createdAt),\n                    new Date(),\n                    { addSuffix: true, locale: pt }\n                ),\n            }));\n\n            setNotifications(data);\n        }\n\n        loadNotifications();\n    }, []);\n\n    function handleToggleVisible() {\n        setVisible(!visible);\n    }\n\n    return (\n        <Container>\n            <Badge onClick={handleToggleVisible} hasUnread>\n                <MdNotifications color=\"#7159c1\" size={20} />\n            </Badge>\n\n            <NotificationList visible={visible}>\n                <Scroll>\n                    {notifications.map(notification => (\n                        <Notification unread={!Notification.read}>\n                            <p>Você possui um novo agendamento</p>\n                            <time>há 2 dias</time>\n                            <button type=\"button\">Marcar como lida</button>\n                        </Notification>\n                    ))}\n                </Scroll>\n            </NotificationList>\n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}