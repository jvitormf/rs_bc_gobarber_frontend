{"ast":null,"code":"import _slicedToArray from \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\gobarber\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\gobarber\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\index.js\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { format, subDays, addDays } from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\nimport api from \"../../services/api\";\nimport { Container, Time } from './styles';\nconst range = [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nexport default function Dashboard() {\n  const _useState = useState(new Date()),\n        _useState2 = _slicedToArray(_useState, 2),\n        date = _useState2[0],\n        setDate = _useState2[1];\n\n  const dateFormatted = useMemo(() => format(date, \"d 'de' MMMM\", {\n    locale: pt\n  }), [date]);\n  useEffect(() => {\n    async function loadSchedule() {}\n  });\n\n  function handlePrevDay() {\n    setDate(subDays(date, 1));\n  }\n\n  function handleNextDay() {\n    setDate(addDays(date, 1));\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handlePrevDay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(MdChevronLeft, {\n    size: 36,\n    color: \"#FFF\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, dateFormatted), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleNextDay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(MdChevronRight, {\n    size: 36,\n    color: \"#FFF\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Time, {\n    past: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"08:00\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Diego Fernandes\")), React.createElement(Time, {\n    available: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"09:00\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Em aberto\")), React.createElement(Time, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"10:00\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Diego Fernandes\")), React.createElement(Time, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"11:00\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Diego Fernandes\"))));\n}","map":{"version":3,"sources":["C:\\Temp\\Rocketseat\\Bootcamp\\gobarber\\frontend\\src\\pages\\Dashboard\\index.js"],"names":["React","useState","useMemo","useEffect","format","subDays","addDays","utcToZonedTime","pt","MdChevronLeft","MdChevronRight","api","Container","Time","range","Dashboard","Date","date","setDate","dateFormatted","locale","loadSchedule","handlePrevDay","handleNextDay"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { format, subDays, addDays } from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\nimport api from '~/services/api';\n\nimport { Container, Time } from './styles';\n\nconst range = [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\nexport default function Dashboard() {\n    const [date, setDate] = useState(new Date());\n\n    const dateFormatted = useMemo(\n        () => format(date, \"d 'de' MMMM\", { locale: pt }),\n        [date]\n    );\n\n    useEffect(() => {\n        async function loadSchedule() {}\n    });\n\n    function handlePrevDay() {\n        setDate(subDays(date, 1));\n    }\n\n    function handleNextDay() {\n        setDate(addDays(date, 1));\n    }\n\n    return (\n        <Container>\n            <header>\n                <button type=\"button\" onClick={handlePrevDay}>\n                    <MdChevronLeft size={36} color=\"#FFF\" />\n                </button>\n                <strong>{dateFormatted}</strong>\n                <button type=\"button\" onClick={handleNextDay}>\n                    <MdChevronRight size={36} color=\"#FFF\" />\n                </button>\n            </header>\n            <ul>\n                <Time past>\n                    <strong>08:00</strong>\n                    <span>Diego Fernandes</span>\n                </Time>\n                <Time available>\n                    <strong>09:00</strong>\n                    <span>Em aberto</span>\n                </Time>\n                <Time>\n                    <strong>10:00</strong>\n                    <span>Diego Fernandes</span>\n                </Time>\n                <Time>\n                    <strong>11:00</strong>\n                    <span>Diego Fernandes</span>\n                </Time>\n            </ul>\n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}