{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\gobarber\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\gobarber\\\\frontend\\\\src\\\\routes\\\\Route.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthLayout from \"../pages/_layouts/auth\";\nimport DefaultLayout from \"../pages/_layouts/default\";\nexport default function RouteWrapper(_ref) {\n  let Component = _ref.component,\n      isPrivate = _ref.isPrivate,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"isPrivate\"]);\n\n  const signed = false;\n\n  if (!signed && isPrivate) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  }\n\n  if (signed && !isPrivate) {\n    return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }\n\n  const Layout = signed ? DefaultLayout : AuthLayout;\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n}\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\nRouteWrapper.defaultProps = {\n  isPrivate: false\n};","map":{"version":3,"sources":["C:\\Temp\\Rocketseat\\Bootcamp\\gobarber\\frontend\\src\\routes\\Route.js"],"names":["React","PropTypes","Route","Redirect","AuthLayout","DefaultLayout","RouteWrapper","Component","component","isPrivate","rest","signed","Layout","props","propTypes","bool","oneOfType","element","func","isRequired","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,eAAe,SAASC,YAAT,OAIZ;AAAA,MAHYC,SAGZ,QAHCC,SAGD;AAAA,MAFCC,SAED,QAFCA,SAED;AAAA,MADIC,IACJ;;AACC,QAAMC,MAAM,GAAG,KAAf;;AAEA,MAAI,CAACA,MAAD,IAAWF,SAAf,EAA0B;AACtB,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,MAAIE,MAAM,IAAI,CAACF,SAAf,EAA0B;AACtB,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,QAAMG,MAAM,GAAGD,MAAM,GAAGN,aAAH,GAAmBD,UAAxC;AAEA,SACI,oBAAC,KAAD,oBACQM,IADR;AAEI,IAAA,MAAM,EAAEG,KAAK,IACT,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAUH;AAEDP,YAAY,CAACQ,SAAb,GAAyB;AACrBL,EAAAA,SAAS,EAAER,SAAS,CAACc,IADA;AAErBP,EAAAA,SAAS,EAAEP,SAAS,CAACe,SAAV,CAAoB,CAACf,SAAS,CAACgB,OAAX,EAAoBhB,SAAS,CAACiB,IAA9B,CAApB,EACNC;AAHgB,CAAzB;AAMAb,YAAY,CAACc,YAAb,GAA4B;AACxBX,EAAAA,SAAS,EAAE;AADa,CAA5B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport AuthLayout from '~/pages/_layouts/auth';\nimport DefaultLayout from '~/pages/_layouts/default';\n\nexport default function RouteWrapper({\n    component: Component,\n    isPrivate,\n    ...rest\n}) {\n    const signed = false;\n\n    if (!signed && isPrivate) {\n        return <Redirect to=\"/\" />;\n    }\n\n    if (signed && !isPrivate) {\n        return <Redirect to=\"/dashboard\" />;\n    }\n\n    const Layout = signed ? DefaultLayout : AuthLayout;\n\n    return (\n        <Route\n            {...rest}\n            render={props => (\n                <Layout>\n                    <Component {...props} />\n                </Layout>\n            )}\n        />\n    );\n}\n\nRouteWrapper.propTypes = {\n    isPrivate: PropTypes.bool,\n    component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n        .isRequired,\n};\n\nRouteWrapper.defaultProps = {\n    isPrivate: false,\n};\n"]},"metadata":{},"sourceType":"module"}